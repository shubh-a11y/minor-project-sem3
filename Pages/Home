import React from "react";
import { Link } from "react-router-dom";
import { createPageUrl } from "../Components/utils/createPageUrl";
import { 
  FileText, 
  CreditCard, 
  GraduationCap, 
  Heart,
  Search,
  ArrowRight,
  Users,
  Shield,
  Clock,
  Star
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { useLanguage } from '../components/contexts/LanguageContext';

const featuredServices = [
  {
    name: "DigiLocker Access",
    description: "Access your digital documents instantly",
    category: "documents",
    icon: FileText,
    difficulty: "easy",
    time: "5 minutes",
    popular: true
  },
  {
    name: "Aadhaar Services",
    description: "Update, download, and verify your Aadhaar",
    category: "identity",
    icon: CreditCard,
    difficulty: "easy",
    time: "10 minutes",
    popular: true
  },
  {
    name: "Educational Certificates",
    description: "Get your 10th, 12th, and degree certificates",
    category: "education",
    icon: GraduationCap,
    difficulty: "medium",
    time: "15 minutes",
    popular: true
  },
  {
    name: "Health Insurance Schemes",
    description: "Apply for Ayushman Bharat and state schemes",
    category: "health",
    icon: Heart,
    difficulty: "medium",
    time: "20 minutes",
    popular: false
  }
];

const categories = [
  { name: "Documents", icon: FileText, count: 15, color: "bg-blue-100 text-blue-700" },
  { name: "Identity", icon: CreditCard, count: 8, color: "bg-orange-100 text-orange-700" },
  { name: "Education", icon: GraduationCap, count: 12, color: "bg-green-100 text-green-700" },
  { name: "Health", icon: Heart, count: 9, color: "bg-red-100 text-red-700" }
];

export default function HomePage() {
  const { t } = useLanguage();
  
  const stats = [
    { label: t('statsTotalServices'), value: "50+", icon: FileText },
    { label: t('statsLanguages'), value: "8", icon: Users },
    { label: t('statsAvgTime'), value: "10 min", icon: Clock },
    { label: t('statsSuccessRate'), value: "95%", icon: Star }
  ];

  return (
    <div className="space-y-16">
      {/* Hero Section */}
      <section className="relative overflow-hidden">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 sm:py-24">
          <div className="text-center">
            <div className="mb-8">
              <Badge className="bg-orange-100 text-orange-700 border-orange-200 px-4 py-2 text-sm font-medium">
                ðŸ‡®ðŸ‡³ {t('madeForIndia')}
              </Badge>
            </div>
            
            <h1 className="text-4xl sm:text-6xl font-bold text-gray-900 mb-6 leading-tight">
              {t('heroTitle1')}
              <br />
              <span className="bg-gradient-to-r from-orange-500 to-green-600 bg-clip-text text-transparent">
                {t('heroTitle2')}
              </span>
            </h1>
            
            <p className="text-xl text-gray-600 mb-8 max-w-2xl mx-auto leading-relaxed">
              {t('heroSubtitle')}
            </p>

            <div className="flex flex-col sm:flex-row gap-4 justify-center mb-12">
              <Link to={createPageUrl("Services")}>
                <Button size="lg" className="bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white px-8 py-3 rounded-xl hover-lift">
                  {t('exploreServices')}
                  <ArrowRight className="ml-2 w-5 h-5" />
                </Button>
              </Link>
              
              <Link to={createPageUrl("Search")}>
                <Button variant="outline" size="lg" className="border-2 border-gray-300 hover:border-orange-300 px-8 py-3 rounded-xl hover-lift">
                  <Search className="mr-2 w-5 h-5" />
                  {t('searchServices')}
                </Button>
              </Link>
            </div>

            {/* Stats */}
            <div className="grid grid-cols-2 md:grid-cols-4 gap-6 max-w-3xl mx-auto">
              {stats.map((stat) => (
                <div key={stat.label} className="text-center">
                  <div className="w-12 h-12 bg-gradient-to-r from-orange-100 to-green-100 rounded-full flex items-center justify-center mx-auto mb-3">
                    <stat.icon className="w-6 h-6 text-orange-600" />
                  </div>
                  <div className="text-2xl font-bold text-gray-900">{stat.value}</div>
                  <div className="text-sm text-gray-600">{stat.label}</div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Featured Services */}
      <section className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-12">
          <h2 className="text-3xl font-bold text-gray-900 mb-4">
            {t('mostPopularServices')}
          </h2>
          <p className="text-lg text-gray-600">
            {t('popularServicesSubtitle')}
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {featuredServices.map((service) => (
            <Card key={service.name} className="hover-lift cursor-pointer border-0 saffron-shadow bg-white/80 backdrop-blur">
              <CardContent className="p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="w-12 h-12 bg-gradient-to-r from-orange-100 to-green-100 rounded-xl flex items-center justify-center">
                    <service.icon className="w-6 h-6 text-orange-600" />
                  </div>
                  {service.popular && (
                    <Badge className="bg-green-100 text-green-700 border-green-200">
                      Popular
                    </Badge>
                  )}
                </div>
                
                <h3 className="font-semibold text-gray-900 mb-2">
                  {service.name}
                </h3>
                <p className="text-sm text-gray-600 mb-4">
                  {service.description}
                </p>
                
                <div className="flex items-center justify-between text-xs text-gray-500">
                  <div className="flex items-center gap-1">
                    <Clock className="w-3 h-3" />
                    {service.time}
                  </div>
                  <div className={`px-2 py-1 rounded-full text-xs font-medium ${
                    service.difficulty === 'easy' ? 'bg-green-100 text-green-700' :
                    service.difficulty === 'medium' ? 'bg-yellow-100 text-yellow-700' :
                    'bg-red-100 text-red-700'
                  }`}>
                    {service.difficulty}
                  </div>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </section>

      {/* Service Categories */}
      <section className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-12">
          <h2 className="text-3xl font-bold text-gray-900 mb-4">
            {t('browseByCategory')}
          </h2>
          <p className="text-lg text-gray-600">
            {t('browseCategorySubtitle')}
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {categories.map((category) => (
            <Link key={category.name} to={createPageUrl("Services")}>
              <Card className="hover-lift cursor-pointer border-0 green-shadow bg-white/80 backdrop-blur">
                <CardContent className="p-8 text-center">
                  <div className={`w-16 h-16 rounded-full ${category.color} flex items-center justify-center mx-auto mb-4`}>
                    <category.icon className="w-8 h-8" />
                  </div>
                  <h3 className="font-semibold text-gray-900 mb-2">
                    {category.name}
                  </h3>
                  <p className="text-sm text-gray-600">
                    {category.count} services available
                  </p>
                </CardContent>
              </Card>
            </Link>
          ))}
        </div>
      </section>

      {/* Trust Indicators */}
      <section className="bg-gradient-to-r from-orange-50 to-green-50 py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-3xl font-bold text-gray-900 mb-8">
            {t('whyTrust')}
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div className="space-y-4">
              <div className="w-16 h-16 bg-white rounded-full flex items-center justify-center mx-auto saffron-shadow">
                <Shield className="w-8 h-8 text-green-600" />
              </div>
              <h3 className="text-xl font-semibold text-gray-900">{t('trustPrivacyTitle')}</h3>
              <p className="text-gray-600">
                {t('trustPrivacyDesc')}
              </p>
            </div>
            
            <div className="space-y-4">
              <div className="w-16 h-16 bg-white rounded-full flex items-center justify-center mx-auto saffron-shadow">
                <Users className="w-8 h-8 text-orange-600" />
              </div>
              <h3 className="text-xl font-semibold text-gray-900">{t('trustMultilingualTitle')}</h3>
              <p className="text-gray-600">
                {t('trustMultilingualDesc')}
              </p>
            </div>
            
            <div className="space-y-4">
              <div className="w-16 h-16 bg-white rounded-full flex items-center justify-center mx-auto saffron-shadow">
                <FileText className="w-8 h-8 text-green-600" />
              </div>
              <h3 className="text-xl font-semibold text-gray-900">{t('trustUpdatedTitle')}</h3>
              <p className="text-gray-600">
                {t('trustUpdatedDesc')}
              </p>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
}